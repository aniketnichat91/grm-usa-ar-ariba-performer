<Activity mc:Ignorable="sap sap2010" x:Class="FinalReportGeneration" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FinalReportExcelpath" Type="InArgument(x:String)" />
    <x:Property Name="In_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="In_FinalReportUploadSharepointpath" Type="OutArgument(x:String)" />
    <x:Property Name="in_str_TargetRecipientEmail" Type="InArgument(x:String)" />
    <x:Property Name="in_str_ClientName" Type="InArgument(x:String)" />
  </x:Members>
  <this:FinalReportGeneration.in_FinalReportExcelpath>
    <InArgument x:TypeArguments="x:String" />
  </this:FinalReportGeneration.in_FinalReportExcelpath>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1217,4229</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FinalReportGeneration_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FinalReportGeneration" sap:VirtualizedContainerService.HintSize="839,4164" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_date" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_temp" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_FolderExist" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="in_DbConnection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_success" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Failed" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TotalAmountCount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ProcessedInvoices" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FailedUse" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TotalAmountSum" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_date]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Now.ToString("yyyy-MM-dd")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:BuildDataTable DataTable="[dt_temp]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Row_x0020_Labels&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Count_x0020_of_x0020_Invoices&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Sum_x0020_of_x0020_Amount_Bill&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Sum_x0020_of_x0020_Amount_SAP&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="797,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_FinalReportExcelpath+str_date]" />
    <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bool_FolderExist]" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[in_FinalReportExcelpath+str_date]" />
    <If Condition="[bool_FolderExist]" sap:VirtualizedContainerService.HintSize="797,460" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_FinalReportExcelpath+str_date+&quot;Folder already exists.&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,302" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[in_FinalReportExcelpath+str_date]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_FinalReportExcelpath+str_date+&quot; --&gt;File Created.&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="DB_Tracker\DBConnection.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DB_Tracker\DBConnection.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="ui:DatabaseConnection" x:Key="out_DBConnection">[in_DbConnection]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_ProcessedInvoices]" DisplayName="Run query total invoices" ExistingDbConnection="[in_DbConnection]" sap:VirtualizedContainerService.HintSize="797,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="select Log_Client_Code_Name as 'Client Name',Log_Product_Name as 'Product Name',Log_PO_Number as 'PO Number',Log_Invoice_Number as 'Invoice Number',Log_Total_Amount as 'Total Amount',Log_Invoice_Date as 'Invoice Date' from AR_Log_Txn  where convert(date,Log_Insertion_Date_Time)&gt;convert(date,GETDATE()-1) and Log_CM_ID=1 order by Log_Txn_ID desc ">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_success]" DisplayName="Run query success invoices" ExistingDbConnection="[in_DbConnection]" sap:VirtualizedContainerService.HintSize="797,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select Log_Client_Code_Name as 'Client Name',Log_Product_Name as 'Product Name',Log_PO_Number as 'PO Number',Log_Invoice_Number as 'Invoice Number',Log_Total_Amount as 'Total Amount',Log_Invoice_Date as 'Invoice Date',Log_Txn_Status as 'Status' from AR_Log_Txn  where convert(date,Log_Insertion_Date_Time)&gt;convert(date,GETDATE()-1) and Log_Txn_Status='Successful' and Log_CM_ID=1 order by Log_Txn_ID desc ">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Failed]" DisplayName="Run query failed invoices used for combine" ExistingDbConnection="[in_DbConnection]" sap:VirtualizedContainerService.HintSize="797,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="Select Log_Client_Code_Name As 'Client Name',Log_Product_Name as 'Product Name',Log_PO_Number as 'PO Number',Log_Invoice_Number as 'Invoice Number',Log_Total_Amount as 'Total Amount',Log_Invoice_Date as 'Invoice Date',Log_Txn_Status as 'Status' from AR_Log_Txn  where convert(date,Log_Insertion_Date_Time)&gt;convert(date,GETDATE()-1) and (Log_Txn_Status='Failed' or Log_Txn_Status='InProgress' or Log_Txn_Status is null or Log_Txn_Status ='')  and Log_CM_ID=1 order by Log_Txn_ID desc">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_FailedUse]" DisplayName="Run query failed invoices use for failed sheet" ExistingDbConnection="[in_DbConnection]" sap:VirtualizedContainerService.HintSize="797,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="Select alt.Log_Client_Code_Name As 'Client Name',alt.Log_Product_Name as 'Product Name',alt.Log_PO_Number as 'PO Number',alt.Log_Invoice_Number as 'Invoice Number',alt.Log_Total_Amount as 'Total Amount',alt.Log_Invoice_Date as 'Invoice Date',alt.Log_Txn_Status as 'Status',aelt.Exp_Type as 'Exception Type', aelt.Exp_Message_Details as 'Exception Details' from AR_Log_Txn alt left join AR_Exception_Log_Txn aelt on alt.Log_Txn_ID=aelt.Exp_AR_Log_Txn_ID where convert(date,alt.Log_Insertion_Date_Time)&gt;convert(date,GETDATE()-1) and (alt.Log_Txn_Status='Failed' or alt.Log_Txn_Status='InProgress' or alt.Log_Txn_Status is null or alt.Log_Txn_Status ='')  and alt.Log_CM_ID=1 order by alt.Log_Txn_ID desc">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_TotalAmountCount]" DisplayName="Run query Combine of success and failed invoices" ExistingDbConnection="[in_DbConnection]" sap:VirtualizedContainerService.HintSize="797,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="select top 1 Rpt_Billing_RegisterCount as 'Total Billing Register Invoices',(Rpt_Total_CreditAmount+Rpt_Total_DebitAmount)as'Total Billing Amount',Rpt_Report_URL as 'Report URL',Rpt_Success_Count as 'Success Invoices', (ISNULL(Rpt_BusinessException_Count, 0 ) + ISNULL(Rpt_Failed_Count, 0 )) as 'Failed Invoices' from AR_Bots_Execution_Rpt  where convert(date,Rpt_Performer_EndTime)&gt;convert(date,GETDATE()-1) and Rpt_CM_ID=1 order by Rpt_ID desc">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_TotalAmountSum]" DisplayName="Run query total invoices count and amount" ExistingDbConnection="[in_DbConnection]" sap:VirtualizedContainerService.HintSize="797,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="select (select sum(CAST(Log_Total_Amount as DECIMAL(20,2))) from AR_Log_Txn  where convert(date,Log_Insertion_Date_Time)&gt;convert(date,GETDATE()-1) and (Log_Txn_Status like '%Failed%' or Log_Txn_Status like'%InProgress%' or  Log_Txn_Status is null or Log_Txn_Status ='') and Log_CM_ID=1) as Failed,(select sum(CAST(Log_Total_Amount as DECIMAL(20,2))) from AR_Log_Txn  where convert(date,Log_Insertion_Date_Time)&gt;convert(date,GETDATE()-1) and Log_Txn_Status like '%Successful%' and Log_CM_ID=1) as Successful">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,1531" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[in_FinalReportExcelpath+str_date+&quot;\FinalReport_&quot;+now.ToString(&quot;yyyy-MM-dd HH&quot;)]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1422" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_temp]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="SUMMARY" StartingCell="A1" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_success]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="SUCCESSFUL INVOICES" StartingCell="A1" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_FailedUse]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="FAILED INVOICES" StartingCell="A1" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_ProcessedInvoices]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="BILL REGISTER" StartingCell="A1" />
            <ui:MergeDataTable Destination="[dt_Failed]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[dt_success]" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_Failed]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="STATUS" StartingCell="A1" />
            <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="SUMMARY" Text="Total Failed-Invoice" />
            <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="SUMMARY" Text="Successful-Invoice" />
            <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="SUMMARY" Text="Grand Total" />
            <If Condition="[dt_TotalAmountCount.RowCount&gt;0]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="B2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="SUMMARY" Text="[dt_TotalAmountCount.Rows(0).Item(&quot;Failed Invoices&quot;).ToString]" />
                  <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="SUMMARY" Text="[dt_TotalAmountCount.Rows(0).Item(&quot;Success Invoices&quot;).ToString]" />
                  <ui:ExcelWriteCell Cell="B4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="SUMMARY" Text="[dt_TotalAmountCount.Rows(0).Item(&quot;Total Billing Register Invoices&quot;).ToString]" />
                  <ui:ExcelWriteCell Cell="C4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="SUMMARY" Text="[dt_TotalAmountCount.Rows(0).Item(&quot;Total Billing Amount&quot;).ToString]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[dt_TotalAmountSum.RowCount&gt;0]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="C3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="SUMMARY" Text="[dt_TotalAmountSum.Rows(0).Item(&quot;Successful&quot;).ToString]" />
                  <ui:ExcelWriteCell Cell="C2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="SUMMARY" Text="[dt_TotalAmountSum.Rows(0).Item(&quot;Failed&quot;).ToString]" />
                  <ui:ExcelWriteCell Cell="D3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="SUMMARY" Text="[dt_TotalAmountSum.Rows(0).Item(&quot;Successful&quot;).ToString]" />
                  <ui:ExcelWriteCell Cell="D4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="SUMMARY" Text="[dt_TotalAmountSum.Rows(0).Item(&quot;Successful&quot;).ToString]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="797,339" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ar_postcheck_workflow.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ar_postcheck_workflow.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_CredentialName">GMUSA_AR_Target_Credentials</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_CM_ID">1</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_SapInvoicesReportPath">C:\Users\grmusarpadev17\Documents\AR_Automation\USA Target\SAP Invoices Report\</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Post Check Failed: &quot;+exception.Message]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="uploadFinalReportonsharepoint.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="uploadFinalReportonsharepoint.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_CLIENTNAME_Target">[in_Config("GMUSA_AR_CLIENTNAME_Target_Performer").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_AGENCYNAME_Target">[in_Config("GMUSA_AR_AGENCYNAME_Target_Performer").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_DriveName_Target">[in_Config("GMUSA_AR_DriveName_Target").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_SiteUrl_Target">[in_Config("GMUSA_AR_SiteUrl_Target").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_DownloadFileLocalPath">[in_FinalReportExcelpath+str_date+"\FinalReport_"+now.ToString("yyyy-MM-dd HH")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_ApplicationSecret">[in_Config("GMUSA_AR_ApplicationSecret").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_ApplicationID">[in_Config("GMUSA_AR_ApplicationID").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_GMUSA_AR_TenantID">[in_Config("GMUSA_AR_TenantID").ToString]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[In_config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_str_TargetRecipientEmail">[in_str_TargetRecipientEmail]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_totalinvoicecount">[dt_TotalAmountCount.Rows(0).Item("Total Billing Register Invoices").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_totalfailedcount">[dt_TotalAmountCount.Rows(0).Item("Failed Invoices").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_totalsuccesscount">[dt_TotalAmountCount.Rows(0).Item("Success Invoices").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_str_ClientName">[in_str_ClientName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[In_FinalReportUploadSharepointpath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("sharepointFolderPath").ToString+str_date+"\FinalReport_"+now.ToString("yyyy-MM-dd HH")]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>